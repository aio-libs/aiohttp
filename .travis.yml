if: >  # Forbid running non-PR pushes from pyup bot
  not (type != pull_request AND branch =~ ^pyup\-scheduled\-update\-)

dist: xenial

language: python

python:
- 3.5
- 3.6
- &mainstream_python 3.7
- nightly
- &pypy3 pypy3.5-6.0.0

install:
- &upgrade_python_toolset pip install --upgrade pip wheel setuptools
- pip install --upgrade -r requirements/cython.txt

before_script:
- &cythonize make cythonize
- &ci_requirements pip install --upgrade -r requirements/ci.txt

script:
- make cov-ci-run

after_success:
 - codecov

_helpers:
  # anchor nodes to be included elsewhere.
  # names that start with _ are only used in other helpers
- &mainstream_python_base
  python: *mainstream_python
- &_reset_steps
  env: []
  before_install: skip
  install: skip
  script: skip

- &lint_base
  <<: *mainstream_python_base
  <<: *_reset_steps
  stage: &doc_stage_name docs, linting and pre-test checks
  env:
    AIOHTTP_NO_EXTENSIONS: "1"
  install:
  - *upgrade_python_toolset
  - *ci_requirements
  before_script: skip

- &_generic_deploy_base
  <<: *_reset_steps
  deploy: &_deploy_defaults
    provider: pypi
    # `skip_cleanup: true` is required to preserve binary wheels, built
    # inside of manylinux1 docker container during `script` step above.
    skip_cleanup: true
    # `skip_existing: true` is required to skip uploading dists, already
    # present in PYPI instead of failing the whole process.
    # This happens when other CI (AppVeyor etc.) has already uploaded
    # the very same dist (usually sdist).
    skip_existing: true
    username: aio-libs-bot
    password:
      # Encrypted with `travis encrypt -r aio-libs/aiohttp --api-endpoint 'https://api.travis-ci.com/'`:
      secure: bWF8GkGmjxfisMx+LqOmZgf9EXPT4yBMhiIbN+rU5gs53PJJyn1r287c5zEijnIHlpQaJVwWJ9ZFl1n34y37P1yvhlz0M6esr5K10B9fJ6nkUoAivtOWARcHLQ3bC+WGC/V9S0v0pZ11qFuSNzJzFZqfRabRw0H8muVWGhuBuYp97EdJWCdSNpXqsj2Ts8ytPMYv+5m3iPgXq833svFbWRjZ+HgX8HwvF2lo+ej+tsFJNACbQmj+eQDGlWQZzP2s4/3grHivd2retpqfW1cYgZaZX68/UB2ghsCtkxhcNpGaM8I/n3udAHkPSqz3MC2FJL0RdkyvQ8UZkcmcisQxz0voQM25995BHGWktwpDh7BxFtGJishXV7hiFz9zVOZLM9u5AzIO4hoN770SsZDewWdhzowXPYT8DXiHVg+roEkszg8FeBmisx1cw34CK9H0iLUSQ9EF2vuz8T4bqEpbT6Fyta90wZTvJ7GpJ4yXJXR6VAvLgiX4zXeFdx/4aViz3UzkDJ06qieRuZJWfQ9u2lDxJfqHEVy5IxM5iACagP1XayJiVIN0uFRxNElxTlCMope6ICCOu9fhcGnF15XNw5YpFPYYvph3JU1vC8cYw7ypg8LQGryp1fNM9SXWaGTiV+J/yvsynFiXX6QiyGOwSBIJ9XjZEfRd8i9HaGHw2cw=
    # Although Travis CI instructs `setup.py` to build source distribution,
    # which is default value for distribution option (`distribution: sdist`),
    # it will also upload all wheels we've previously built in manylinux1
    # docker container using `twine upload -r pypi dist/*` command.
    # Also since commit https://github.com/travis-ci/dpl/commit/90b5e39
    # it is default that Travis PYPI provider has `skip_upload_docs: true`
    # set by default.
    # Besides above, we don't do cleanup of `dist/*`, because it's being done
    # by Travis CI PYPI deployment provider after upload, unconditionally.
    on:
      tags: true
      all_branches: true

- &_osx_pypi_deploy_base
  <<: *_generic_deploy_base
  stage: &stage_test_osx_name test under OS X (last chance to fail before deploy available)
  os: osx
  language: shell
  env:
  - &env_pyenv PYENV_ROOT="$HOME/.pyenv"
  - &env_path PATH="$PYENV_ROOT/bin:$PATH"
  before_install:
  - brew update
  - |
    if brew ls --versions pyenv > /dev/null; then
      brew outdated pyenv || brew upgrade pyenv
      if brew ls --versions pyenv-virtualenv > /dev/null; then
        brew outdated pyenv-virtualenv || brew upgrade pyenv-virtualenv
      else
        brew install pyenv-virtualenv
      fi
    else
      brew install pyenv pyenv-virtualenv
    fi
  - |
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
    PYENV_PYTHON_VERSION="$(pyenv install --list \
      | grep -E "^\\s*$PYTHON_VERSION" \
      | sort -n -t. -k3 \
      | tail -n1 \
      | tr -d '[:space:]' \
      )"
    echo $PYENV_PYTHON_VERSION
  - pyenv install --skip-existing --keep --verbose "$PYENV_PYTHON_VERSION"
  - pyenv shell "$PYENV_PYTHON_VERSION"
  - python --version
  script: skip
  before_cache:
  - brew --cache
  deploy:
    <<: *_deploy_defaults
    skip_cleanup: false
    distributions: bdist_wheel

# OS X test and deploy matrix helpers
# These are used to build a matrix, with
# N OSX image options and M python options,
# of the form:
#
#   - <<: *osx_pypi_deploy_base_<osx version>
#     name: <build name (optional)>
#     env: *osx_env_<python version>

# OS X image options
- &osx_pypi_deploy_base_1010
  <<: *_osx_pypi_deploy_base
  osx_image: xcode6.4
- &osx_pypi_deploy_base_1011
  <<: *_osx_pypi_deploy_base
  osx_image: xcode7.3
- &osx_pypi_deploy_base_1012
  <<: *_osx_pypi_deploy_base
  osx_image: xcode8.3

# OS X Python options (the _osx_env_<version>
# key is only needed to provide a container for
# the &osx_env_<version> YAML anchor).
- &osx_env_py35
  - PYTHON_VERSION: "3.5"
  - *env_pyenv
  - *env_path
- &osx_env_py36
  - PYTHON_VERSION: "3.6"
  - *env_pyenv
  - *env_path
- &osx_env_py37
  - PYTHON_VERSION: "3.7"
  - *env_pyenv
  - *env_path

- &linux_pypi_deploy_base
  <<: *_generic_deploy_base
  <<: *mainstream_python_base
  stage: &deploy_stage_name Linux build and deploy
  deploy:
    <<: *_deploy_defaults
    # `skip_cleanup: true` is required to preserve binary wheels, built
    # inside of manylinux1 docker container during `script` step above.
    skip_cleanup: true


os: linux

matrix:
  fast_finish: true
  allow_failures:
  - python: nightly

  include:
  - <<: *mainstream_python_base
    name: without extensions
    env:
      AIOHTTP_NO_EXTENSIONS: "1"

  - <<: *lint_base
    name: Checking docs spelling
    before_script:
    - pip install --upgrade -r requirements/doc-spelling.txt
    script:
    - make doc-spelling
    after_failure: cat docs/_build/spelling/output.txt
    addons:
      apt:
        packages:
        - libenchant-dev

  - <<: *lint_base
    name: Checking Towncrier fragments
    before_script:
    - pip install --upgrade -r requirements/towncrier.txt
    script:
    - towncrier --yes

  - <<: *lint_base
    name: Linting source code with flake8
    before_script:
    - pip install --upgrade -r requirements/flake.txt
    script:
    - flake8 aiohttp examples tests

  - <<: *lint_base
    name: Linting source code with mypy
    script:
    - mypy aiohttp

  - <<: *lint_base
    name: Verifying distribution package metadata
    script:
    - python setup.py --verbose sdist bdist_wheel
    - twine check dist/*

  - <<: *lint_base
    name: Making sure that CONTRIBUTORS.txt remains sorted
    language: shell
    install: skip
    script:
    - LC_ALL=C sort -c CONTRIBUTORS.txt

  # Build and deploy MacOS binary wheels for each OSX + Python combo possible
  - <<: *osx_pypi_deploy_base_1010
    name: binary wheel python 3.5 on OS X 10.10
    env: *osx_env_py35
  - <<: *osx_pypi_deploy_base_1010
    name: binary wheel python 3.6 on OS X 10.10
    env: *osx_env_py36
  - <<: *osx_pypi_deploy_base_1010
    name: binary wheel python 3.7 on OS X 10.10
    env: *osx_env_py37
  - <<: *osx_pypi_deploy_base_1011
    name: binary wheel python 3.5 on OS X 10.11
    env: *osx_env_py35
  - <<: *osx_pypi_deploy_base_1011
    name: binary wheel python 3.6 on OS X 10.11
    env: *osx_env_py36
  - <<: *osx_pypi_deploy_base_1011
    name: binary wheel python 3.7 on OS X 10.11
    env: *osx_env_py37
  - <<: *osx_pypi_deploy_base_1012
    name: binary wheel python 3.5 on OS X 10.12
    env: *osx_env_py35
  - <<: *osx_pypi_deploy_base_1012
    name: binary wheel python 3.6 on OS X 10.12
    env: *osx_env_py36
  - <<: *osx_pypi_deploy_base_1012
    name: binary wheel python 3.7 on OS X 10.12
    env: *osx_env_py37

  # Build and deploy manylinux1 binary wheels and source distribution
  - <<: *linux_pypi_deploy_base
    name: Build and deploy source distribution and manylinux1 binary wheels
    services:
    - docker
    script:
    - ./tools/run_docker.sh "aiohttp"

stages:
- *doc_stage_name
- test
- name: *stage_test_osx_name
  if: type IN (api, cron)
- name: *deploy_stage_name
  # This will prevent deploy unless it's a tagged commit:
  if: tag IS present


cache: pip

before_cache:
- rm -f $HOME/.cache/pip/log/debug.log

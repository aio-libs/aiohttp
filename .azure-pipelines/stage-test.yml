stages:
- stage: test
  displayName: 'Run tests'

  jobs:
  - job:
    strategy:
      matrix:
        Py36-Cython-Linux:
          python.version: '3.6'
          no_extensions: ''
          image: 'ubuntu-latest'
        Py37-Cython-Linux:
          python.version: '3.7'
          no_extensions: ''
          image: 'ubuntu-latest'
        Py36-Pure-Linux:
          python.version: '3.6'
          no_extensions: 'Y'
          image: 'ubuntu-latest'
        Py37-Pure-Linux:
          python.version: '3.7'
          no_extensions: 'Y'
          image: 'ubuntu-latest'
#        PyPy3-Linux:
#          python.version: 'pypy3'
#          no_extensions: 'Y'
#          image: 'ubuntu-latest'
        # Py36-Cython-Win:
        #   python.version: '3.6'
        #   no_extensions: ''
        #   image: 'windows-latest'
        # Py37-Cython-Win:
        #   python.version: '3.7'
        #   no_extensions: ''
        #   image: 'windows-latest'
        Py36-Cython-Mac:
          python.version: '3.6'
          no_extensions: ''
          image: 'macos-latest'
        Py37-Cython-Mac:
          python.version: '3.7'
          no_extensions: ''
          image: 'macos-latest'
    pool:
      vmImage: '$(image)'

    timeoutInMinutes: 10

    steps:
    - checkout: self
      clean: true
      submodules: true

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - script: |
        python -m pip install --upgrade pip setuptools
      displayName: 'Update pip'

    - script: |
        make cythonize
      condition: eq(variables['no_extensions'], '')
      displayName: 'Cythonize'

    - script: |
        pip install -r requirements/dev.txt pytest-azurepipelines
      displayName: 'Install dependencies'
      env:
        AIOHTTP_NO_EXTENSIONS: '$(no_extensions)'

    - script: |
        pytest tests -vv
      displayName: 'pytest'

    - script: |
        python -m coverage xml
      displayName: 'Prepare coverage'

    - script: |
        pip install codecov
        python -m codecov -f coverage.xml -X gcov
      displayName: 'Upload coverage reports'
      condition: ne(variables['codecov.token'], '')
      env:
        CODECOV_TOKEN: $(codecov.token)

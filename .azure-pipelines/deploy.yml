trigger:
  tags:
    include:
    - v?.*
pr: none


variables:
- group: codecov
- group: twine


resources:
  containers:
  - container: manylinux
    image: quay.io/pypa/manylinux1_x86_64
  repositories:
  - repository: templates
    type: github
    name: aio-libs/azure-pipelines
    endpoint: aio-libs

stages:
- template: stage-lint.yml

- template: stage-test.yml

- stage: build
  displayName: 'Build'

  jobs:
  - job: tarball
    displayName: 'Tarball'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - template: templates/step-build.yml@templates
        parameters:
          steps:
            - script: |
                make cythonize
              displayName: 'Cythonize'
            - script: |
                python setup.py sdist
              displayName: 'Make tarball'

  - job: manylinux
    displayName: 'Manylinux'
    strategy:
      matrix:
        py36 x64:
          python.code: 'cp36-cp36m'
          manylinux: 'manylinux_64'
        py37 x64:
          python.code: 'cp37-cp37m'
          manylinux: 'manylinux_64'
        py38 x64:
          python.code: 'cp38-cp38'
          manylinux: 'manylinux_64'
    pool:
      vmImage: 'ubuntu-latest'
    container: manylinux
    steps:
      - checkout: self
        submodules: true
        clean: true

      - script: |
          /opt/python/$(python.code)/bin/python -m venv .build-venv
        displayName: 'Use Python $(python.code)'

      - script: |
          source .build-venv/bin/activate
          pip install -U setuptools wheel
        displayName: 'Install tools'

      - script: |
          source .build-venv/bin/activate
          make cythonize
          python setup.py bdist_wheel
        displayName: 'Make wheel'

      - script: |
          auditwheel repair dist/*.whl --wheel-dir wheelhouse/
        displayName: 'Repair wheel'

      - template: templates/step-store-dist.yml@templates
        parameters:
          folder: wheelhouse

  - job:
    strategy:
      matrix:
        Win py36 x64:
          python.version: '3.6'
          python.architecture: 'x64'
          image: 'windows-latest'
        Win py37 x64:
          python.version: '3.7'
          python.architecture: 'x64'
          image: 'windows-latest'
        Win py38 x64:
          python.version: '3.8'
          python.architecture: 'x64'
          image: 'windows-latest'
        Win py36 x86:
          python.version: '3.6'
          python.architecture: 'x86'
          image: 'windows-latest'
        Win py37 x86:
          python.version: '3.7'
          python.architecture: 'x86'
          image: 'windows-latest'
        Win py38 x86:
          python.version: '3.8'
          python.architecture: 'x86'
          image: 'windows-latest'
        Mac py36:
          python.version: '3.6'
          image: 'macos-latest'
          python.architecture: 'x64'
        Mac py37:
          python.version: '3.7'
          image: 'macos-latest'
          python.architecture: 'x64'
        Mac py38:
          python.version: '3.8'
          image: 'macos-latest'
          python.architecture: 'x64'
    pool:
      vmImage: '$(image)'
    steps:
      - template: templates/step-build.yml@templates
        parameters:
          python: '$(python.version)'
          architecture: '$(python.architecture)'
          steps:
            - script: |
                make cythonize
                python setup.py bdist_wheel
              displayName: 'Make wheel'

- template: templates/stage-publish.yml@templates
  parameters:
    github: release-upload
